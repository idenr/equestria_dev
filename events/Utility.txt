add_namespace = utility

# utility.1 and utility.2 replaced by game rule

#country_event = { ### Set rule to prevent joining factions
#	id = utility.1

#	hidden = yes
#	mean_time_to_happen = { days = 1 }
#	trigger = {
#		is_ai = yes
#		NOT = { has_idea = detached_country }
#		NOT = { has_country_flag = join_factions_set }
#	}
#
#	option = {
#		set_rule = { can_join_factions = no }
#		set_country_flag = join_factions_set
#	}
#}

#country_event = { ### Let players join Factions
#	id = utility.2
#	hidden = yes

#	mean_time_to_happen = { days = 1 }
#	trigger = {
#		is_ai = no
#		NOT = { has_idea = detached_country }
#		has_country_flag = join_factions_set
#	}
#
#	option = {
#		set_rule = { can_join_factions = yes }
#		clr_country_flag = join_factions_set
#	}
#}

country_event = { ### Nuke handling
	id = utility.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.3"}
	hidden = yes
	is_triggered_only = yes
	option = {

		every_state = {
			limit = {
				has_state_flag = nuke_modifier
				NOT = { has_state_flag = recently_nuked }
			}
			remove_province_modifier = {
				static_modifiers = { nuked }
				province = {
					all_provinces = yes
				}
			}
			add_state_modifier = {
				modifier = {
					local_supplies = -0.35
					local_factories = -0.15
				}
			}
			clr_state_flag = nuke_modifier
		}
	}
}

#country_event = { ### Delay for flavour liberation Acornage
#	id = utility.4
#	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.4"}
#	hidden = yes
#	is_triggered_only = yes
#	option = {
#		trigger = { 136 = { is_controlled_by = CHN } }
#		136 = { clr_state_flag = acornage_taken_chn_timeout }
#	}
#	option = {
#		trigger = { 136 = { is_controlled_by = EQS } }
#	}
#}
#country_event = { ### Delay for flavour liberation Tall Tales
#	id = utility.5
#	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.5"}
#	hidden = yes
#	is_triggered_only = yes
#	option = {
#		trigger = { 59 = { is_controlled_by = CHN } }
#		59 = { clr_state_flag = tall_tales_taken_chn_timeout }
#	}
#	option = {
#		trigger = { 59 = { is_controlled_by = EQS } }
#	}
#}
#country_event = { ### Delay for flavour liberation Vanhoover
#	id = utility.6
#	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.6"}
#	hidden = yes
#	is_triggered_only = yes
#	option = {
#		trigger = { 14 = { is_controlled_by = CHN } }
#		14 = { clr_state_flag = vanhoover_taken_chn_timeout }
#	}
#	option = {
#		trigger = { 14 = { is_controlled_by = EQS } }
#	}
#}

country_event = { ### SOL
	id = utility.7
	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.7"}
	hidden = yes
	is_triggered_only = yes
	option = {
		SOL = {
			set_politics = {
				ruling_party = fascism
			}
			create_country_leader = {
				name = "Prince Blueblood"
				picture = "gfx/leaders/EQS/Blueblood.tga"
				expire = "1965.1.1"
				ideology = despotism
				desc = "POLITICS_BLUEBLOOD_DESC"
				traits = {
				}
			}
		}
	}
}

country_event = { ### One event for cosmetic tags
	id = utility.8
	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.8"}
	hidden = yes

	mean_time_to_happen = { days = 2 }

	trigger = {
		is_subject = yes
		OR = {
			AND = {
				is_subject_of = event_target:griffonian_empire
				OR = {
					has_autonomy_state = autonomy_subjugated_vassal
					has_autonomy_state = autonomy_vassal
					has_autonomy_state = autonomy_autonomous_vassal
					has_autonomy_state = autonomy_nominal_vassal
				}
				NOT = {
					has_cosmetic_tag = GRI_SUBJECT
					has_cosmetic_tag = FBK_GRI
					has_cosmetic_tag = FEA_PvdA_old_flag_GRI_Puppet
				}
			}
			AND = {
				is_subject_of = event_target:solar_empire
				NOT = {
					original_tag = EQC
					original_tag = CRY
					has_country_flag = is_solar_puppet
				}
				OR = {
					original_tag = PLB
					original_tag = GRF
					original_tag = PNG
					original_tag = STL
					original_tag = BUF
					original_tag = DRG
					original_tag = GFF
					original_tag = OLE
					original_tag = BAL
					original_tag = CES
					original_tag = JUN
					original_tag = SCS
					original_tag = STG
					original_tag = JAK
					original_tag = CHN
					original_tag = YAK
				}
			}
			AND = {
				is_subject_of = NLR
				NOT = {
					original_tag = EQC
					has_country_flag = is_luna_puppet
				}
				OR = {
					original_tag = PLB
					original_tag = GRF
					original_tag = PNG
					original_tag = STL
					original_tag = BUF
					original_tag = DRG
					original_tag = GFF
					original_tag = OLE
					original_tag = BAL
					original_tag = CES
					original_tag = JUN
					original_tag = SCS
					original_tag = STG
					original_tag = JAK
					original_tag = CHN
					original_tag = YAK
					original_tag = CRY
				}
			}
			AND = {
				is_subject_of = CHN
				CHN = { has_government = fascism }
				NOT = {
					original_tag = EQC
					has_country_flag = OLE_CHN_puppet
					has_country_flag = is_changeling_puppet
				}
				OR = {
					original_tag = PLB
					original_tag = GRF
					original_tag = PNG
					original_tag = STL
					original_tag = BUF
					original_tag = DRG
					original_tag = GFF
					original_tag = OLE
					original_tag = BAL
					original_tag = CES
					original_tag = JUN
					original_tag = SCS
					original_tag = STG
					original_tag = JAK
					original_tag = CRY
					original_tag = EQS
					original_tag = YAK
					original_tag = MAN
				}
			}
			AND = {
				is_subject_of = FAT
				original_tag = SRS
				NOT = { has_cosmetic_tag = SRS_FAT_puppet }
			}
		}
	}

	option = {
		overlord = { ROOT = { apply_cosmetic_tags_on_puppet_PREV_is_overlord = yes } }
	}
}

country_event = { ### SOL
	id = utility.9
	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.9"}
	hidden = yes
	is_triggered_only = yes
	option = {
		restore_previous_manpower_function = yes
	}
}

country_event = { ### SOL
	id = utility.10
	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.10"}
	hidden = yes
	is_triggered_only = yes
	trigger = {
		is_ai = yes
		is_subject = yes
		check_variable = { num_owned_states = 1 }
		capital_scope = {
			is_coastal = no
			is_island_state = no
		}
		check_variable = { neighbors^num = 1 }
		any_neighbor_country = {
			is_ai = yes
			NOT = {
				ROOT = { is_subject_of = PREV }
			}
		}
	}
	option = {
		random_neighbor_country = {
			limit = { is_ai = yes }
			annex_country = { target = ROOT }
		}
	}
}

country_event = { ### Add compliance on diplo/event annex
	id = utility.11
	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.11"}
	hidden = yes
	is_triggered_only = yes
	option = {
		every_owned_state = {
			limit = {
				NOT = { is_core_of = ROOT }
				any_of = {
					array = ROOT.annex_compliance
					occupied_country_tag = var:v
				}
				NOT = { has_state_flag = annex_compliance_added }
			}
			set_temp_variable = {
				ROOT.set_compliance = 0
			}
			for_each_loop = {
				array = ROOT.annex_compliance
				if = {
					limit = {
						occupied_country_tag = var:v
						var:v = {
							has_variable = specific_annex_compliance
						}
					}
					var:v = {
						set_temp_variable = {
							ROOT.set_compliance = specific_annex_compliance
						}
					}
					set_temp_variable = {
						break = 1
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							ROOT.set_compliance = 0
						}
					}
				}
				add_compliance = ROOT.set_compliance
			}
			else_if = {
				limit = {
					any_of = {
						array = ROOT.annex_compliance_subject
						occupied_country_tag = var:v
					}
				}
				add_compliance = 60
			}
			else = {
				add_compliance = 40
			}
			set_state_flag = annex_compliance_added
		}
		for_each_loop = {
			array = annex_compliance
			var:v = { clear_variable = specific_annex_compliance }
		}
		clear_array = annex_compliance
		clear_array = annex_compliance_subject
		every_owned_state = {
			clr_state_flag = annex_compliance_added
		}
	}
}

country_event = { ### Spawn NCR
	id = utility.12
	immediate = {log = "[GetDateText]: [Root.GetName]: event utility.12"}
	hidden = yes
	is_triggered_only = yes
	option = {
		ncr_setup = yes
	}
}